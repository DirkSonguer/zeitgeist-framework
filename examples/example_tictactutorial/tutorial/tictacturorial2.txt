#summary Tutorial - How to create a simple PBBG, part 2
= Part 2 - Basic Setup =

This tutorial is about creating a working persistent browser based game with the Zeitgeist Framework. To keep it simple, we're just doing a simple Tic Tac Toe game. However we will use a much Zeitgeist specific functionalities as possible to show how they work.

If you have specific questions about the tutorial, please mail us or open an [http://code.google.com/p/zeitgeist-framework/issues/list issue].


== The Goal ==

The goal of this part is to set up and configure the project so that we have a working application pipeline (this does not mean a game pipeline, just a working project).

== Setting up the Database ==

You will find the initial database import in _"tictactutorial/zeitgeist/-additional-material/zeitgeist.sql"_. Import this into a new database called _"tictactutorial"_.

This is a reference database that contains the tables for the framework as well as all the modules. Your database should now contain the following tables:

 * actionlog
 * actionlog_parameters
 * actions
 * configurationcache
 * game_actions
 * game_assemblages
 * game_assemblage_components
 * game_components
 * game_entities
 * game_entity_components
 * game_eventlog
 * game_events
 * modules
 * sessiondata
 * templatecache
 * userconfirmation
 * userdata
 * userrights
 * userroles
 * userroles_to_actions
 * userroles_to_users
 * users

All tables should initially be empty. As for their purpose: we will go into each table during this tutorial, so please be patient.

== Basic project setup ==

Open the "index.php" that should be located in your root. This is the main file that will be executed every request a user makes. Let's take it apart.

 * @package ZEITGEIST PROJECT
 * @subpackage ZEITGEIST PROJECT MAIN


define('TICTACTUTORIAL_ACTIVE', true);
