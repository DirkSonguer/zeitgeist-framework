#summary Tutorial - How to create a simple PBBG, part 4
= Part 4 - Presentation Layer =

This tutorial is about creating a working persistent browser based game with the Zeitgeist Framework. To keep it simple, we're just doing a simple Tic Tac Toe game. However we will use a much Zeitgeist specific functionalities as possible to show how they work.

If you have specific questions about the tutorial, please mail us or open an [http://code.google.com/p/zeitgeist-framework/issues/list issue].

== The Goal ==

In this tutorial we take a little detour before diving into the application logic in the next part: We'll set up the presentation layer (the frontent of the Tic Tac Toe game).

== Presentation Layer ==

The presentation layer is basically everything a user sees in your application or game. This may be HTML, but also a Flash, Silverlight or even Air clients - in short: evey frontend technology.

Zeitgeist, as a very basic framework, does not limit you to any frontend technology. Neither does it define that you have to separate your application code from the frontend. For example you could just write HTML output in your actions and be done with it. However this would most likely result in pretty messy applications very soon. It is always the best practice to separate the backend code from the frontend.

The Zeitgeist framework offers a basic HTML [ClassTemplate templating class], but again: you are not limited to it. You may easily use every other templating class you prefer. [http://www.smarty.net/ Smarty] for example is a very capable and popular template engine.

For this tutorial we'll use a simple HTML output, rendered by the Zeitgeist template class as a small example how to use it in your projects.

== Closing ==

